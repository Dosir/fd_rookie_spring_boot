# 默认的 8080 我们将它改成 9090
server.port=9090
# 未定义上下文路径之前 地址是 http://localhost:8080 定义了后 http://localhost:9090/rookie 你能在tomcat做的事情，配置文件都可以
server.servlet.context-path=/rookie

#配置数据源
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/fd_rookie_demo_0420?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
#spring.datasource.username=root
#spring.datasource.password=12345678

# 配置多数据源
spring.datasource.name=mysql_test
#基本属性--注意，这里如果是【jdbcurl】，则表示默认使用HikariPool作为数据库连接池
spring.datasource.master.url=jdbc:mysql://127.0.0.1:3306/fd_rookie_demo_0420?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
spring.datasource.master.username=root
spring.datasource.master.password=12345678

spring.datasource.slave.url=jdbc:mysql://10.211.55.3:3306/f6_rookie_demo_0420?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=GMT
spring.datasource.slave.username=root
spring.datasource.slave.password=123456

spring.datasource.read=get,select,count,list,query,find
spring.datasource.write=add,create,update,delete,remove,insert

# druid相关配置
# 监控统计拦截的filters
spring.datasource.druid.filters=stat,wall
# 配置初始化大小/最小/最大
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
# 获取连接等待超时时间
spring.datasource.druid.max-wait=60000
# 间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 一个连接在池中最小生存的时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

# 注意注意
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.fd.rookie.spring.boot.mapper
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
# mybatis.configuration.map-underscore-to-camel-case是一个非常好的配置项，
# 合理的命名规范可以让我们省略很多不必要的麻烦，比如xx-mapper.xml中的resultMap的映射可以省略掉了
#mybatis.configuration.map-underscore-to-camel-case=true
# mybatis配置文件的位置
mybatis.config-location=classpath:mybatis/mybatis-config.xml

# 配置通用mapper
mapper.mappers=tk.mybatis.mapper.common.Mapper
mapper.notEmpty=true

#分页插件
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
# 分页合理化参数，默认值为false。当该参数设置为 true 时，
# pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），
# 会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=false
# 支持通过 Mapper 接口参数来传递分页参数，默认值false，
# 分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，
# 查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true

# rabbitmq相关配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# 手动ACK 不开启自动ACK模式,目的是防止报错后未正确处理消息丢失
# 默认 为 none  表示开启自动ACK模式
spring.rabbitmq.listener.simple.acknowledge-mode=manual
