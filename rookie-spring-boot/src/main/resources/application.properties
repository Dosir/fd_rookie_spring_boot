# 默认的 8080 我们将它改成 9090
server.port=9090
# 未定义上下文路径之前 地址是 http://localhost:8080 定义了后 http://localhost:9090 你能在tomcat做的事情，配置文件都可以
server.servlet.context-path=/rookie

#配置数据源
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/fd_rookie_demo_0420?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=12345678

# 注意注意
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.fd.rookie.spring.boot.mapper
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
# mybatis.configuration.map-underscore-to-camel-case是一个非常好的配置项，
# 合理的命名规范可以让我们省略很多不必要的麻烦，比如xx-mapper.xml中的resultMap的映射可以省略掉了
mybatis.configuration.map-underscore-to-camel-case=true

# 配置通用mapper
mapper.mappers=tk.mybatis.mapper.common.Mapper
mapper.notEmpty=true

#分页插件
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
# 分页合理化参数，默认值为false。当该参数设置为 true 时，
# pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），
# 会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=false
# 支持通过 Mapper 接口参数来传递分页参数，默认值false，
# 分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，
# 查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true
